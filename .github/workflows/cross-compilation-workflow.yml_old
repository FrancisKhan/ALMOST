name: CI-Cross-Compilation

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y valgrind
        sudo apt-get install -y mingw-w64
        sudo apt-get install -y gnuplot
        sudo update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
        sudo update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
        sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
        sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
           
    - name: Checkout Almost Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Compile Almost
      run: |
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=mingw-w64_toolchain.cmake .
        make |& tee build-output.txt ; ( exit ${PIPESTATUS[0]} )
    
    - uses: actions/upload-artifact@v2
      with:
        name: build-output
        path: build-output.txt
